name: "Run Script and Comment on Commit"

on:
  push:
    branches:
      - main

jobs: 
  run-script-and-comment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Generate App Token
      - name: Generate App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: |
            bot-test-public
            grader-bot-test

      # Step 2: Checkout the public production repo using the App's token
      - name: Checkout Production Code
        uses: actions/checkout@v4
        with:
          path: production-repo
          token: ${{ steps.generate_token.outputs.token }}

      # Step 3: Checkout the private test repo using the SAME App's token
      - name: Checkout Private Script Repo
        uses: actions/checkout@v4
        with:
          repository: SamEggert/grader-bot-test
          path: private-repo
          token: ${{ steps.generate_token.outputs.token }}
          ref: main

      # Step 4: Run your private script
      - name: Run Script and Wait for Completion
        run: |
          npm install tsx
          npx tsx private-repo/src/index.ts -k ${{ secrets.ANTHROPIC_API_KEY }}

      # Step 5: Read output from file
      - name: Read Output File
        id: read-output
        run: |
          if [ -f "private-repo/output.md" ]; then
            echo "file_content<<EOF" >> $GITHUB_OUTPUT
            cat private-repo/output.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          elif [ -f "production-repo/output.md" ]; then
            echo "file_content<<EOF" >> $GITHUB_OUTPUT
            cat production-repo/output.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "file_content=No output file found" >> $GITHUB_OUTPUT
          fi

      # Step 6: Post comment on the commit
      - name: Comment on Commit
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const output = `${{ steps.read-output.outputs.file_content }}`;
            const commentBody = `${output}\n\n_Generated by automated script on commit ${context.sha.substring(0, 8)}_`;
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: commentBody
            });