name: "Run Script and Comment on Commit"

on:
  push:
    branches:
      - main
    paths:
      - "locadex/**"

jobs: 
  run-script-and-comment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Generate App Token
      - name: Generate App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      # Step 2: Checkout the public production repo using the App's token
      - name: Checkout Production Code
        uses: actions/checkout@v4
        with:
          path: production-repo
          token: ${{ steps.generate_token.outputs.token }} # Uses App token

      # Step 3: Checkout the private test repo using the SAME App's token
      - name: Checkout Private Script Repo
        uses: actions/checkout@v4
        with:
          repository: SamEggert/grader-bot-test
          path: private-repo
          token: ${{ steps.generate_token.outputs.token }} # Uses App token
          # REMOVE THIS LINE: ssh-key: ${{ secrets.SSH_PRIVATE_KEY_FOR_TESTS }} 

      # Step 4: Run your private script (no changes here)
      - name: Run Script and Capture Output
        id: run-script
        run: |
          chmod +x private-repo/my_cli.sh
          output=$(./private-repo/my_cli.sh --target ./production-repo 2>&1)
          echo "script_output<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Step 5: Post comment on the commit (no changes here)
      - name: Comment on Commit
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const output = `${{ steps.run-script.outputs.script_output }}`;
            const commentBody = `## Script Output\n\n\`\`\`\n${output}\n\`\`\`\n\n_Generated by automated script on commit ${context.sha.substring(0, 8)}_`;
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: commentBody
            });