name: "Run Script and Comment on Commit"

# Trigger on pushes to any branch
on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - "locadex/**"

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: read      # Allow reading repository contents
  pull-requests: write # Allow writing to pull requests (if needed)
  issues: write       # Allow writing to issues
  repository-projects: write # Allow writing to repository projects

jobs: 
  run-script-and-comment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code from the production repo (repo-A)
      - name: Checkout Production Code
        uses: actions/checkout@v4
        with:
          # The path where the repo will be checked out.
          # Defaults to the workspace root.
          path: production-repo

      # Step 2: Checkout the private test repo (repo-B) using the SSH key
      - name: Checkout Private Script Repo
        uses: actions/checkout@v4
        with:
          # The name of the private repository
          repository: SamEggert/grader-bot-test
          # The path to check it out into, to avoid name conflicts
          path: private-repo
          # Use the SSH key we stored in secrets
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_FOR_TESTS }}

      # Step 3: Run your private script and capture output
      - name: Run Script and Capture Output
        id: run-script
        run: |
          echo "Setting up script environment..."
          # Make the script executable
          chmod +x private-repo/my_cli.sh
          
          echo "Running script..."
          # Run your script and capture both stdout and stderr
          # Adjust the script path and arguments as needed
          output=$(./private-repo/my_cli.sh --target ./production-repo 2>&1)
          
          # Save the output to a step output, handling multiline content
          echo "script_output<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Step 4: Post comment on the commit
      - name: Comment on Commit
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `${{ steps.run-script.outputs.script_output }}`;
            
            // Create the comment body
            const commentBody = `## Script Output
            
            \`\`\`
            ${output}
            \`\`\`
            
            _Generated by automated script on commit ${context.sha.substring(0, 8)}_`;
            
            // Post comment on the commit
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: commentBody
            });